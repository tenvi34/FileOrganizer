name: Test

on: [push, pull_request]

jobs:
  test-windows:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
    
    - name: Create required directories
      run: |
        mkdir -p config
        mkdir -p logs
    
    - name: Run unit tests
      run: |
        python -m pytest test_file_organizer.py -v --tb=short
    
    - name: Run quick tests
      run: |
        python test_file_organizer.py --quick
    
    - name: Run integration tests
      run: |
        python test_file_organizer.py --integration

  test-macos:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
    
    - name: Create required directories
      run: |
        mkdir -p config
        mkdir -p logs
    
    - name: Run unit tests
      run: |
        python -m pytest test_file_organizer.py -v --tb=short
    
    - name: Run quick tests
      run: |
        python test_file_organizer.py --quick

  test-linux:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-tk python3-pil python3-pil.imagetk xvfb
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
    
    - name: Create required directories
      run: |
        mkdir -p config
        mkdir -p logs
    
    - name: Run tests with virtual display
      run: |
        export DISPLAY=:99
        sudo Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        sleep 3
        python -m pytest test_file_organizer.py -v --tb=short
    
    - name: Run quick tests
      run: |
        export DISPLAY=:99
        python test_file_organizer.py --quick

  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort
    
    - name: Check code formatting with Black
      run: |
        black --check --diff .
      continue-on-error: true
    
    - name: Check import sorting with isort
      run: |
        isort --check-only --diff .
      continue-on-error: true
    
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      continue-on-error: true